server:
  port: 30031
spring:
  kafka:
    bootstrap‐servers: futong-yw-kafka:9092
    producer: # 生产者
      #0表示producer不需要等待任何broker确认收到消息的回复，就可以继续发送下一条消息。性能最高，但是最容易丢消息
      #1至少要等待leader已经成功将数据写入本地log，但是不需要等待所有follower是否成功写入。就可以继续发送下一条消息。
      #这种情况下，如果follower没有成功备份数据，而此时leader
      #-1/all 这意味着leader需要等待所有备份(min.insync.replicas配置的备份个数)都成功写入日志，这种策略会保证只要有
      #一个备份存活就不会丢失数据。
      acks: 1
      #发送失败会重试，默认重试间隔100ms，重试能保证消息发送的可靠性，但是也可能造成消息重复发送，比如网络抖动，所以需要在接收者那
      #边做好消息接收的幂等性处理
      retries: 3
      #设置发送消息的本地缓冲区，如果设置了该缓冲区，消息会先发送到本地缓冲区，可以提高消息发送性能，默认值是33554432，即32MB
      buffer‐memory: 33554432
      #kafka本地线程会从缓冲区取数据，批量发送到broker，
      #设置批量发送消息的大小，默认值是16384，即16kb，就是说一个batch满了16kb就发送出去
      batch‐size: 16384
      # 指定消息key和消息体的编解码方式
      key‐serializer: org.apache.kafka.common.serialization.StringSerializer
      value‐serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        linger:
          ms: 0
  rabbitmq:
    listener:
      direct:
        #一次只往给消费者一条数据
        prefetch: 1
        #拒绝的消息是否被重新放回队列。默认值为true
        default-requeue-rejected: false
  application:
    name: futong-zy-cms
  cloud:
    config:
      discovery:
        serviceId: futong-public-config
        enabled: true
      name: application-common,application-mysql,application-mybatis-plus,application-redis,application-xxlJob,application-rabbitmq
      fail-fast: true
    consul:
      discovery:
        instance-id: ${spring.application.name}:${server.port}
        prefer-ip-address: true
        health-check-interval: 10s
        hostname: ${spring.application.name}
        service-name: ${spring.application.name}
        enabled: true
      host: ftcloud-consul
      port: 8500
  aop:
    auto: true
  messages:
    basename: i18n/message,i18n/sso,i18n/ucenter,i18n/operation,i18n/resource,i18n/audit
#xxl业务端部分配置
xxl:
  job:
    executor:
      ### 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册
      appname: futong-cm-resource-cms
      ### 执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，
      ### 该IP不会绑定Host仅作为通讯实用；地址信息用于 "执行器注册" 和 "调度中心请求并触发任务"；
      ip: ${spring.cloud.client.ip-address}
      ### 执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，
      ### 注意要配置不同执行器端口；   port借用服务的端口确保冲突
      port: 9999

catalog:
  service:
    url: futong-cm-blueprint.service.ftcloud
    port: 11001

mq:
  kafka:
    topic:
      name: kafkaTopicPublicCloud

cloud:
  elasticsearch:
    host: ftcloud-es
    port: 9200
